{"repository_name":"crest","body":"# <img src=\"https://stars.medv.io/mamantoha/crest.svg\" align=\"right\"/>\n\n<p align=\"left\"><img src=\"https://raw.githubusercontent.com/mamantoha/crest/master/logo/logotype_horizontal_dark.png\" alt=\"crest\" height=\"150px\"></p>\n\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/16e439ef2706472988306ef13da91a51)](https://app.codacy.com/app/mamantoha/crest?utm_source=github.com&utm_medium=referral&utm_content=mamantoha/crest&utm_campaign=Badge_Grade_Dashboard)\n![Crystal CI](https://github.com/mamantoha/crest/workflows/Crystal%20CI/badge.svg)\n[![GitHub release](https://img.shields.io/github/release/mamantoha/crest.svg)](https://github.com/mamantoha/crest/releases)\n[![Commits Since Last Release](https://img.shields.io/github/commits-since/mamantoha/crest/latest.svg)](https://github.com/mamantoha/crest/pulse)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://mamantoha.github.io/crest/)\n[![License](https://img.shields.io/github/license/mamantoha/crest.svg)](https://github.com/mamantoha/crest/blob/master/LICENSE)\n\nHTTP and REST client for Crystal, inspired by the Ruby's RestClient gem.\n\nBeloved features:\n\n* Redirects support.\n* HTTP(S) proxy support.\n* Elegant Key/Value headers, cookies, params, and payload.\n* Multipart file uploads.\n* Streaming requests.\n* International Domain Names.\n* Digest access authentication.\n* Logging.\n\nHopefully, someday I can remove this shard though. Ideally, Crystal's standard library would do all this already.\n\n## Installation\n\nAdd this to your application's `shard.yml`:\n\n```yaml\ndependencies:\n  crest:\n    github: mamantoha/crest\n```\n\n## Usage\n\n```crystal\nrequire \"crest\"\n```\n\nBasic usage:\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/get\",\n  params: {:lang => \"en\"}\n)\n# curl -L \"http://httpbin.org/get?lang=en\"\n\nCrest.post(\n  \"http://httpbin.org/post\",\n  form: {:age => 27, :name => {:first => \"Kurt\", :last => \"Cobain\"}}\n)\n# curl -L --data \"age=27&name[first]=Kurt&name[last]=Cobain\" -X POST \"http://httpbin.org/post\"\n\nCrest.post(\n  \"http://httpbin.org/post\",\n  form: {\"file\" => File.open(\"avatar.png\"), \"name\" => \"John\"}\n)\n# curl -X POST http://httpbin.org/post -F 'file=@avatar.png' -F 'name=John' -H 'Content-Type: multipart/form-data'\n```\n\n### Request\n\n`Crest::Request` accept next parameters:\n\nMandatory parameters:\n\n* `:method` - HTTP method (`:get`. `:post`, `:put`, `:patch`,  `:delete`, `:options`, `head`)\n* `:url` - URL (e.g.: `http://httpbin.org/ip`)\n\nOptional parameters:\n\n* `:headers` -  a hash containing the request headers\n* `:cookies` -  a hash containing the request cookies\n* `:form` -  a hash containing form params\n* `:params` -  a hash that represent query-string separated from the preceding part by a question mark (`?`) a sequence of attributeâ€“value pairs separated by a delimiter (`&`)\n* `auth` - access authentication method `basic` or `digest` (default to `basic`)\n* `:user` and `:password` - for authentication\n* `:tls` - client certificates, you can pass in a custom `OpenSSL::SSL::Context::Client` (default to `nil`)\n* `:p_addr`, `:p_port`, `:p_user`, and `:p_pass` - specify a per-request proxy by passing these parameters\n* `:max_redirects` -  maximum number of redirections (default to 10)\n* `:logging` -  enable logging (default to `false`)\n* `:logger` -  set logger (default to `Crest::CommonLogger`)\n* `:handle_errors` - error handling (default to `true`)\n* `:close_connection` close the connection after request is completed (default to `true`)\n* `:http_client` - instance of `HTTP::Client`\n\nMore detailed examples:\n\n```crystal\nrequest = Crest::Request.new(:post,\n  \"http://httpbin.org/post\",\n  headers: {\"Content-Type\" => \"application/json\"},\n  form: {:width => 640, \"height\" => \"480\"}\n)\nrequest.execute\n# curl -L --data \"width=640&height=480\" --header \"Content-Type: application/json\" -X POST \"http://httpbin.org/post\"\n```\n\n```crystal\nCrest::Request.execute(:get,\n  \"http://httpbin.org/get\",\n  params: {:width => 640, \"height\" => \"480\"},\n  headers: {\"Content-Type\" => \"application/json\"})\n)\n# curl -L --header \"Content-Type: application/json\" \"http://httpbin.org/get?width=640&height=480\"\n```\n\n```crystal\nCrest::Request.get(\n  \"http://httpbin.org/get\",\n  p_addr: \"127.0.0.1\",\n  p_port: 3128,\n  p_user: \"admin\",\n  p_pass: \"1234\"\n)\n# curl -L --proxy http://127.0.0.1:3128 --proxy-user admin:1234 \"http://httpbin.org/get\"\n```\n\nA block can be passed to the `Crest::Request` initializer.\n\nThis block will then be called with the `Crest::Request`.\n\n```crystal\nrequest = Crest::Request.new(:get, \"http://httpbin.org/headers\") do |request|\n  request.headers.add(\"foo\", \"bar\")\nend\n\nrequest.execute\n# curl -L --header \"foo: bar\" http://httpbin.org/headers\n```\n\n### Resource\n\nA `Crest::Resource` class can be instantiated for access to a RESTful resource,\nincluding authentication, proxy and logging.\n\nAdditionally, you can set default `params` and `headers` separately.\nSo can use `Crest::Resource` to share common `headers` and `params`.\n\nThe final `headers` and `params` consist of:\n\n* default headers from initializer\n* headers provided in call method (`get`, `post`, etc)\n\nThis is especially useful if you wish to define your site in one place and\ncall it in multiple locations.\n\n```crystal\nresource = Crest::Resource.new(\n  \"http://httpbin.org\",\n  params: {\"key\" => \"value\"},\n  headers: {\"Content-Type\" => \"application/json\"}\n)\n\nresource[\"/get\"].get(\n  headers: {\"Auth-Token\" => \"secret\"}\n)\n\nresource[\"/post\"].post(\n  form: {:height => 100, \"width\" => \"100\"},\n  params: {:secret => \"secret\"}\n)\n```\n\nUse the `[]` syntax to allocate subresources:\n\n```crystal\nsite = Crest::Resource.new(\"http://httpbin.org\")\n\nsite[\"/post\"].post(form: {:param1 => \"value1\", :param2 => \"value2\"})\n# curl -L --data \"param1=value1&param2=value2\" -X POST http://httpbin.org/post\n```\n\nYou can pass `suburl` through `Request#http_verb` methods:\n\n```crystal\nsite = Crest::Resource.new(\"http://httpbin.org\")\n\nsite.post(\"/post\", form: {:param1 => \"value1\", :param2 => \"value2\"})\n# curl -L --data \"param1=value1&param2=value2\" -X POST http://httpbin.org/post\n\nsite.get(\"/get\", params: {:status => \"active\"})\n# curl -L http://httpbin.org/get?status=active\n```\n\nA block can be passed to the `Crest::Resource` instance.\n\nThis block will then be called with the `Crest::Resource`.\n\n```crystal\nresource = Crest::Resource.new(\"http://httpbin.org\") do |resource|\n  resource.headers.merge!({\"foo\" => \"bar\"})\nend\n\nresource[\"/headers\"].get\n```\n\nWith HTTP basic authentication:\n\n```crystal\nresource = Crest::Resource.new(\n  \"http://httpbin.org/basic-auth/user/passwd\",\n  user: \"user\",\n  password: \"passwd\"\n)\n```\n\nWith Proxy authentication:\n\n```crystal\nresource = Crest::Resource.new(\n  \"http://httpbin.org/get\",\n  p_host: \"localhost\",\n  p_port: 3128\n)\n```\n\n### Result handling\n\nThe result of a `Crest::Request` and `Crest::Resource` is a `Crest::Response` object.\n\nResponse objects have several useful methods:\n\n* `Response#body`: The response body as a `String`\n* `Response#body_io`: The response body as a `IO`\n* `Response#status`: The response status as a `HTTP::Status`\n* `Response#status_code`: The HTTP response code\n* `Response#headers`: A hash of HTTP response headers\n* `Response#cookies`: A hash of HTTP cookies set by the server\n* `Response#request`: The `Crest::Request` object used to make the request\n* `Response#http_client_res`: The `HTTP::Client::Response` object\n* `Response#history`: A list of each response received in a redirection chain\n\n### Exceptions\n\n* for result codes between `200` and `207`, a `Crest::Response` will be returned\n* for result codes `301`, `302`, `303` or `307`, the redirection will be followed and the request transformed into a `GET`\n* for other cases, a `Crest::RequestFailed` holding the Response will be raised\n* call `.response` on the exception to get the server's response\n\n```crystal\nCrest.get(\"http://httpbin.org/status/404\")\n# => HTTP status code 404: Not Found (Crest::NotFound)\n\nbegin\n  Crest.get(\"http://httpbin.org/status/404\")\nrescue ex : Crest::NotFound\n  puts ex.response\nend\n```\n\nTo not raise exceptions but return the `Crest::Response` you can set `:handle_errors => false`.\n\n```crystal\nresponse = Crest.get(\"http://httpbin.org/status/404\", handle_errors: false) do |resp|\n  case resp\n  when .success?\n    puts resp.body_io.gets_to_end\n  when .client_error?\n    puts \"Client error\"\n  when .server_error?\n    puts \"Server error\"\n  end\nend\n# => Client error\n\nresponse.status_code # => 404\n```\n\nBut note that it may be more straightforward to use exceptions to handle different HTTP error response cases:\n\n```crystal\nresponse = begin\n  Crest.get(\"http://httpbin.org/status/404\")\nrescue ex : Crest::NotFound\n  puts \"Not found\"\n  ex.response\nrescue ex : Crest::InternalServerError\n  puts \"Internal server error\"\n  ex.response\nend\n# => Not found\n\nresponse.status_code # => 404\n```\n\n### Streaming responses\n\nNormally, when you use `Crest`, `Crest::Request` or `Crest::Resource` methods to retrieve data, the entire response is buffered in memory and returned as the response to the call.\n\nHowever, if you are retrieving a large amount of data, for example an iso, or any other large file, you may want to stream the response directly to disk rather than loading it in memory. If you have a very large file, it may become impossible to load it into memory.\n\nIf you want to stream the data from the response to a file as it comes, rather than entirely in memory, you can pass a block to which you pass a additional logic, which you can use to stream directly to a file as each chunk is received.\n\nWith a block, an `Crest::Response` body is returned and the response's body is available as an `IO` by invoking `Crest::Response#body_io`.\n\nThe following is an example:\n\n```crystal\nCrest.get(\"https://github.com/crystal-lang/crystal/archive/0.27.0.zip\") do |resp|\n  filename = resp.filename || \"crystal.zip\"\n\n  File.open(filename, \"w\") do |file|\n    IO.copy(resp.body_io, file)\n  end\nend\n```\n\n### Advanced Usage\n\nThis section covers some of `crest` more advanced features.\n\n#### Parameters serializer\n\nUnder the hood `crest` uses `Crest::ParamsEncoder` module to encode param.\n\nThe encoder affect both how `crest` processes query strings and how it serializes POST bodies.\n\n`Crest::ParamsEncoder` provides 2 methods:\n\n* `#encode` - converts the given param into a URI querystring\n\n    ```crystal\n    Crest::ParamsEncoder.encode({\"a\" => [\"one\", \"two\", \"three\"], \"b\" => true, \"c\" => \"C\", \"d\" => 1})\n    # => 'a[]=one&a[]=two&a[]=three&b=true&c=C&d=1'\n   ```\n\n* `#decode` - converts the given URI querystring into a hash\n\n    ```crystal\n    Crest::ParamsEncoder.decode(\"a[]=one&a[]=two&a[]=three&b=true&c=C&d=1\")\n    # => {\"a\" => [\"one\", \"two\", \"three\"], \"b\" => \"true\", \"c\" => \"C\", \"d\" => \"1\"}\n    ```\n\n#### Multipart\n\nYeah, that's right! This does multipart sends for you!\n\n```crystal\nfile = File.open(\"#{__DIR__}/example.png\")\nCrest.post(\"http://httpbin.org/post\", form: {:image => file})\n```\n\n```crystal\nfile = File.open(\"#{__DIR__}/example.png\")\nresource = Crest::Resource.new(\"https://httpbin.org\")\nresponse = resource[\"/post\"].post(form: {:image => file})\n```\n\n#### JSON payload\n\n`crest` does not speak JSON natively, so serialize your *form* to a string before passing it to `crest`.\n\n```crystal\nCrest.post(\n  \"http://httpbin.org/post\",\n  headers: {\"Content-Type\" => \"application/json\"},\n  form: {:foo => \"bar\"}.to_json\n)\n```\n\n#### Headers\n\nRequest headers can be set by passing a hash containing keys and values representing header names and values:\n\n```crystal\nresponse = Crest.get(\n  \"http://httpbin.org/bearer\",\n  headers: {\"Authorization\" => \"Bearer cT0febFoD5lxAlNAXHo6g\"}\n)\nresponse.headers\n# => {\"Authorization\" => [\"Bearer cT0febFoD5lxAlNAXHo6g\"]}\n```\n\n#### Cookies\n\n`Request` and `Response` objects know about HTTP cookies, and will automatically extract and set headers for them as needed:\n\n```crystal\nresponse = Crest.get(\n  \"http://httpbin.org/cookies/set\",\n  params: {\"k1\" => \"v1\", \"k2\" => \"v2\"}\n)\nresponse.cookies\n# => {\"k1\" => \"v1\", \"k2\" => \"v2\"}\n```\n\n```crystal\nresponse = Crest.get(\n  \"http://httpbin.org/cookies\",\n  cookies: {\"k1\" => \"v1\"}\n)\nresponse.cookies\n# => {\"k1\" => \"v1\"}\n```\n\n#### Basic access authentication\n\nFor basic access authentication for an HTTP user agent you should to provide a `user` name and `password` when making a request.\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/basic-auth/user/passwd\",\n  user: \"user\",\n  password: \"passwd\"\n)\n# curl -L --user user:passwd http://httpbin.org/basic-auth/user/passwd\n```\n\n#### Digest access authentication\n\nFor digest access authentication for an HTTP user agent you should to provide a `user` name and `password` when making a request.\n\n```crystal\nCrest.get(\n  \"https://httpbin.org/digest-auth/auth/user/passwd/MD5\",\n  auth: \"digest\",\n  user: \"user\",\n  password: \"passwd\"\n)\n# curl -L --digest --user user:passwd https://httpbin.org/digest-auth/auth/user/passwd/MD5\n```\n\n#### SSL/TLS support\n\nIf `tls` is given it will be used:\n\n```crystal\nCrest.get(\"https://expired.badssl.com\", tls: OpenSSL::SSL::Context::Client.insecure)\n```\n\n#### Proxy\n\nIf you need to use a proxy, you can configure individual requests with the proxy host and port arguments to any request method:\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/ip\",\n  p_addr: \"localhost\",\n  p_port: 3128\n)\n```\n\nTo use authentication with your proxy, use next syntax:\n\n```crystal\nCrest.get(\n  \"http://httpbin.org/ip\",\n  p_addr: \"localhost\",\n  p_port: 3128,\n  p_user: \"user\",\n  p_pass: \"qwerty\"\n)\n```\n\n#### Logging\n\n> `Logger` class is completely taken from [halite](https://github.com/icyleaf/halite) shard.\n> Thanks [icyleaf](https://github.com/icyleaf)!\n\nBy default, the `Crest` does not enable logging. You can enable it per request by setting `logging: true`:\n\n```crystal\nCrest.get(\"http://httpbin.org/get\", logging: true)\n```\n\n##### Filter sensitive information from logs with a regex matcher\n\n```crystal\nresource = Crest::Request.get(\"http://httpbin.org/get\", params: {api_key => \"secret\"}, logging: true) do |request|\n  request.logger.filter(/(api_key=)(\\w+)/, \"\\\\1[REMOVED]\")\nend\n\n# => crest | 2018-07-04 14:49:49 | GET | http://httpbin.org/get?api_key=[REMOVED]\n```\n\n##### Customize logger\n\nYou can create the custom logger by integration `Crest::Logger` abstract class.\nHere has two methods must be implement: `Crest::Logger.request` and `Crest::Logger.response`.\n\n```crystal\nclass MyLogger < Crest::Logger\n  def request(request)\n    @logger.info { \">> | %s | %s\" % [request.method, request.url] }\n  end\n\n  def response(response)\n    @logger.info { \"<< | %s | %s\" % [response.status_code, response.url] }\n  end\nend\n\nCrest.get(\"http://httpbin.org/get\", logging: true, logger: MyLogger.new)\n```\n\n#### Redirection\n\nBy default, `crest` will follow HTTP 30x redirection requests.\n\nTo disable automatic redirection, set `:max_redirects => 0`.\n\n```crystal\nCrest::Request.execute(method: :get, url: \"http://httpbin.org/redirect/1\", max_redirects: 0)\n# => Crest::Found: 302 Found\n```\n\n#### Access HTTP::Client\n\nYou can access `HTTP::Client` via the `http_client` instance method.\n\nThis is usually used to set additional options (e.g. read timeout, authorization header etc.)\n\n```crystal\nclient = HTTP::Client.new(\"httpbin.org\")\nclient.read_timeout = 1.second\n\nbegin\n  Crest::Request.new(:get,\n    \"http://httpbin.org/delay/10\",\n    http_client: client\n  )\nrescue IO::TimeoutError\n  puts \"Timeout!\"\nend\n```\n\n```crystal\nclient = HTTP::Client.new(\"httpbin.org\")\nclient.read_timeout = 1.second\n\nbegin\n  resource = Crest::Resource.new(\"http://httpbin.org\", http_client: client)\n  resource.get(\"/delay/10\")\nrescue IO::TimeoutError\n  puts \"Timeout!\"\nend\n```\n\n#### Convert Request object to cURL command\n\nUse `to_curl` method on instance of `Crest::Request` to convert request to cURL command.\n\n```crystal\nrequest = Crest::Request.new(\n  :post,\n  \"http://httpbin.org/post\",\n  form: {\"title\" => \"New Title\", \"author\" => \"admin\"}\n)\nrequest.to_curl\n# => curl -X POST http://httpbin.org/post -d 'title=New+Title&author=admin' -H 'Content-Type: application/x-www-form-urlencoded'\n```\n\n```crystal\nrequest = Crest::Request.new(\n  :get,\n  \"http://httpbin.org/basic-auth/user/passwd\",\n  user: \"user\",\n  password: \"passwd\"\n)\nrequest.to_curl\n# => curl -X GET http://httpbin.org/basic-auth/user/passwd --user user:passwd\n```\n\nAlso you can directly use `Crest::Curlify` which accept instance of `Crest::Request`\n\n```crystal\nrequest = Crest::Request.new(:get, \"http://httpbin.org\")\nCrest::Curlify.new(request).to_curl\n# => curl -X GET http://httpbin.org\n```\n\n## Development\n\nInstall dependencies:\n\n```console\nshards\n```\n\nTo run test:\n\n```console\ncrystal spec\n```\n\n### Workbook\n\n```console\ncrystal play\nopen http://localhost:8080\n```\n\nThen select the Workbook -> Requests from the menu.\n\n## Contributing\n\n1. Fork it (<https://github.com/mamantoha/crest/fork>)\n2. Create your feature branch (git checkout -b my-new-feature)\n3. Commit your changes (git commit -am 'Add some feature')\n4. Push to the branch (git push origin my-new-feature)\n5. Create a new Pull Request\n\n## Contributors\n\n* [mamantoha](https://github.com/mamantoha) Anton Maminov - creator, maintainer\n* [icyleaf](https://github.com/icyleaf) Icyleaf Wang - logging support\n* [psikoz](https://github.com/psikoz) Logo design\n\n## License\n\nCopyright: 2017-2021 Anton Maminov (anton.maminov@gmail.com)\n\nThis library is distributed under the MIT license. Please see the LICENSE file.\n","program":{"html_id":"crest/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"crest","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crest/Crest","path":"Crest.html","kind":"module","full_name":"Crest","name":"Crest","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crest.cr","line_number":34,"url":null},{"filename":"src/crest/curlify.cr","line_number":1,"url":null},{"filename":"src/crest/exceptions.cr","line_number":3,"url":null},{"filename":"src/crest/form.cr","line_number":1,"url":null},{"filename":"src/crest/forms/data_form.cr","line_number":3,"url":null},{"filename":"src/crest/forms/urlencoded_form.cr","line_number":3,"url":null},{"filename":"src/crest/logger.cr","line_number":3,"url":null},{"filename":"src/crest/loggers/common_logger.cr","line_number":8,"url":null},{"filename":"src/crest/params_encoder.cr","line_number":1,"url":null},{"filename":"src/crest/redirector.cr","line_number":1,"url":null},{"filename":"src/crest/request.cr","line_number":3,"url":null},{"filename":"src/crest/resource.cr","line_number":3,"url":null},{"filename":"src/crest/response.cr","line_number":5,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"EXCEPTIONS_MAP","name":"EXCEPTIONS_MAP","value":"{} of Int32 => Crest::RequestFailed.class","doc":null,"summary":null},{"id":"HTTP_METHODS","name":"HTTP_METHODS","value":"[\"get\", \"delete\", \"post\", \"put\", \"patch\", \"options\", \"head\"] of ::String","doc":null,"summary":null},{"id":"STATUSES","name":"STATUSES","value":"{100 => \"Continue\", 101 => \"Switching Protocols\", 102 => \"Processing\", 200 => \"OK\", 201 => \"Created\", 202 => \"Accepted\", 203 => \"Non-Authoritative Information\", 204 => \"No Content\", 205 => \"Reset Content\", 206 => \"Partial Content\", 207 => \"Multi-Status\", 208 => \"Already Reported\", 226 => \"IM Used\", 300 => \"Multiple Choices\", 301 => \"Moved Permanently\", 302 => \"Found\", 303 => \"See Other\", 304 => \"Not Modified\", 305 => \"Use Proxy\", 306 => \"Switch Proxy\", 307 => \"Temporary Redirect\", 308 => \"Permanent Redirect\", 400 => \"Bad Request\", 401 => \"Unauthorized\", 402 => \"Payment Required\", 403 => \"Forbidden\", 404 => \"Not Found\", 405 => \"Method Not Allowed\", 406 => \"Not Acceptable\", 407 => \"Proxy Authentication Required\", 408 => \"Request Timeout\", 409 => \"Conflict\", 410 => \"Gone\", 411 => \"Length Required\", 412 => \"Precondition Failed\", 413 => \"Payload Too Large\", 414 => \"URI Too Long\", 415 => \"Unsupported Media Type\", 416 => \"Range Not Satisfiable\", 417 => \"Expectation Failed\", 418 => \"I\\\"m A Teapot\", 421 => \"Too Many Connections From This IP\", 422 => \"Unprocessable Entity\", 423 => \"Locked\", 424 => \"Failed Dependency\", 425 => \"Unordered Collection\", 426 => \"Upgrade Required\", 428 => \"Precondition Required\", 429 => \"Too Many Requests\", 431 => \"Request Header Fields Too Large\", 449 => \"Retry With\", 450 => \"Blocked By Windows Parental Controls\", 500 => \"Internal Server Error\", 501 => \"Not Implemented\", 502 => \"Bad Gateway\", 503 => \"Service Unavailable\", 504 => \"Gateway Timeout\", 505 => \"HTTP Version Not Supported\", 506 => \"Variant Also Negotiates\", 507 => \"Insufficient Storage\", 508 => \"Loop Detected\", 509 => \"Bandwidth Limit Exceeded\", 510 => \"Not Extended\", 511 => \"Network Authentication Required\"}","doc":"Hash of HTTP status code => message.","summary":"<p>Hash of HTTP status code => message.</p>"},{"id":"VERSION","name":"VERSION","value":"{{ (`shards version /__w/crest/crest/src`).chomp.stringify }}","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"This module's static methods are the entry point for using the Crest client.\n\nSuported HTTP methods: `get`, `put`, `post`, `patch` `delete`, `options`, `head`\n\nExamples:\n\n```\nCrest.get(\n  \"http://httpbin.org/get\",\n  headers: {\"Content-Type\" => \"image/jpg\"},\n  params: {\"lang\" => \"en\"}\n)\n\nCrest.post(\n  \"http://httpbin.org/post\",\n  headers: {\"Access-Token\" => [\"secret1\", \"secret2\"]},\n  form: {:fizz => \"buz\"},\n  logging: true,\n)\n\nCrest.get(\"http://httpbin.org/stream/5\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>This module's static methods are the entry point for using the Crest client.</p>","class_methods":[{"id":"delete(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"delete(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"delete","doc":"Execute a DELETE request and and yields the `Crest::Response` to the block.\n\n```\nCrest.delete(\"http://httpbin.org/delete\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a DELETE request and and yields the <code><a href=\"Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:delete, url, **args)\nrequest.execute(&block)\n"}},{"id":"delete(url:String,**args):Crest::Response-class-method","html_id":"delete(url:String,**args):Crest::Response-class-method","name":"delete","doc":"Execute a DELETE request and returns a `Crest::Response`.\n\n```\nCrest.delete(\"http://httpbin.org/delete\")\n```","summary":"<p>Execute a DELETE request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:delete, url, **args)\nrequest.execute\n"}},{"id":"get(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"get(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"get","doc":"Execute a GET request and and yields the `Crest::Response` to the block.\n\n```\nCrest.get(\"http://httpbin.org/get\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a GET request and and yields the <code><a href=\"Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:get, url, **args)\nrequest.execute(&block)\n"}},{"id":"get(url:String,**args):Crest::Response-class-method","html_id":"get(url:String,**args):Crest::Response-class-method","name":"get","doc":"Execute a GET request and returns a `Crest::Response`.\n\n```\nCrest.get(\"http://httpbin.org/get\")\n```","summary":"<p>Execute a GET request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:get, url, **args)\nrequest.execute\n"}},{"id":"head(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"head(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"head","doc":"Execute a HEAD request and and yields the `Crest::Response` to the block.\n\n```\nCrest.head(\"http://httpbin.org/head\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a HEAD request and and yields the <code><a href=\"Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"head","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:head, url, **args)\nrequest.execute(&block)\n"}},{"id":"head(url:String,**args):Crest::Response-class-method","html_id":"head(url:String,**args):Crest::Response-class-method","name":"head","doc":"Execute a HEAD request and returns a `Crest::Response`.\n\n```\nCrest.head(\"http://httpbin.org/head\")\n```","summary":"<p>Execute a HEAD request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"head","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:head, url, **args)\nrequest.execute\n"}},{"id":"options(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"options(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"options","doc":"Execute a OPTIONS request and and yields the `Crest::Response` to the block.\n\n```\nCrest.options(\"http://httpbin.org/options\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a OPTIONS request and and yields the <code><a href=\"Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:options, url, **args)\nrequest.execute(&block)\n"}},{"id":"options(url:String,**args):Crest::Response-class-method","html_id":"options(url:String,**args):Crest::Response-class-method","name":"options","doc":"Execute a OPTIONS request and returns a `Crest::Response`.\n\n```\nCrest.options(\"http://httpbin.org/options\")\n```","summary":"<p>Execute a OPTIONS request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:options, url, **args)\nrequest.execute\n"}},{"id":"patch(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"patch(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"patch","doc":"Execute a PATCH request and and yields the `Crest::Response` to the block.\n\n```\nCrest.patch(\"http://httpbin.org/patch\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a PATCH request and and yields the <code><a href=\"Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:patch, url, **args)\nrequest.execute(&block)\n"}},{"id":"patch(url:String,**args):Crest::Response-class-method","html_id":"patch(url:String,**args):Crest::Response-class-method","name":"patch","doc":"Execute a PATCH request and returns a `Crest::Response`.\n\n```\nCrest.patch(\"http://httpbin.org/patch\")\n```","summary":"<p>Execute a PATCH request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:patch, url, **args)\nrequest.execute\n"}},{"id":"post(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"post(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"post","doc":"Execute a POST request and and yields the `Crest::Response` to the block.\n\n```\nCrest.post(\"http://httpbin.org/post\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a POST request and and yields the <code><a href=\"Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:post, url, **args)\nrequest.execute(&block)\n"}},{"id":"post(url:String,**args):Crest::Response-class-method","html_id":"post(url:String,**args):Crest::Response-class-method","name":"post","doc":"Execute a POST request and returns a `Crest::Response`.\n\n```\nCrest.post(\"http://httpbin.org/post\")\n```","summary":"<p>Execute a POST request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:post, url, **args)\nrequest.execute\n"}},{"id":"put(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"put(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"put","doc":"Execute a PUT request and and yields the `Crest::Response` to the block.\n\n```\nCrest.put(\"http://httpbin.org/put\") do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a PUT request and and yields the <code><a href=\"Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:put, url, **args)\nrequest.execute(&block)\n"}},{"id":"put(url:String,**args):Crest::Response-class-method","html_id":"put(url:String,**args):Crest::Response-class-method","name":"put","doc":"Execute a PUT request and returns a `Crest::Response`.\n\n```\nCrest.put(\"http://httpbin.org/put\")\n```","summary":"<p>Execute a PUT request and returns a <code><a href=\"Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest.cr","line_number":49,"url":null},"def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:put, url, **args)\nrequest.execute\n"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"crest/Crest/CommonLogger","path":"Crest/CommonLogger.html","kind":"class","full_name":"Crest::CommonLogger","name":"CommonLogger","abstract":false,"superclass":{"html_id":"crest/Crest/Logger","kind":"class","full_name":"Crest::Logger","name":"Logger"},"ancestors":[{"html_id":"crest/Crest/Logger","kind":"class","full_name":"Crest::Logger","name":"Logger"},{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/loggers/common_logger.cr","line_number":9,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"request(request:Crest::Request):Nil-instance-method","html_id":"request(request:Crest::Request):Nil-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request) : Nil","args_html":"(request : <a href=\"../Crest/Request.html\">Crest::Request</a>) : Nil","location":{"filename":"src/crest/loggers/common_logger.cr","line_number":10,"url":null},"def":{"name":"request","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"message = String.build do |io|\n  (io << \"| \") << (colorful_method(request.method))\n  (io << \" | \") << request.url\n  if request.form_data.nil?\n  else\n    (io << \" | \") << request.form_data.to_s.inspect\n  end\nend.to_s\ninfo(message)\nmessage\n"}},{"id":"response(response:Crest::Response):Nil-instance-method","html_id":"response(response:Crest::Response):Nil-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"args_string":"(response : Crest::Response) : Nil","args_html":"(response : <a href=\"../Crest/Response.html\">Crest::Response</a>) : Nil","location":{"filename":"src/crest/loggers/common_logger.cr","line_number":22,"url":null},"def":{"name":"response","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"message = String.build do |io|\n  (io << \"| \") << (colorful_status_code(response.status_code))\n  (io << \" | \") << response.url\n  (io << \" | \") << response.body.inspect\nend.to_s\ninfo(message)\nmessage\n"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/Curlify","path":"Crest/Curlify.html","kind":"class","full_name":"Crest::Curlify","name":"Curlify","abstract":false,"superclass":{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/curlify.cr","line_number":9,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"Class to convert `Crest::Request` object to cURL command\n\n```\nrequest = Crest::Request.new(:post, \"http://httpbin.org/post\", form: {\"title\" => \"New Title\"})\nCrest::Curlify.to_curl(request)\n=> \"curl -X POST http://httpbin.org/post -d 'title=New+Title' -H 'Content-Type: application/x-www-form-urlencoded'\"\n```","summary":"<p>Class to convert <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> object to cURL command</p>","class_methods":[{"id":"to_curl(request:Crest::Request)-class-method","html_id":"to_curl(request:Crest::Request)-class-method","name":"to_curl","doc":"Returns string with cURL command by provided `Crest::Request` object","summary":"<p>Returns string with cURL command by provided <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> object</p>","abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request)","args_html":"(request : <a href=\"../Crest/Request.html\">Crest::Request</a>)","location":{"filename":"src/crest/curlify.cr","line_number":11,"url":null},"def":{"name":"to_curl","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(request)).to_curl"}}],"constructors":[{"id":"new(request:Crest::Request)-class-method","html_id":"new(request:Crest::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request)","args_html":"(request : <a href=\"../Crest/Request.html\">Crest::Request</a>)","location":{"filename":"src/crest/curlify.cr","line_number":15,"url":null},"def":{"name":"new","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"to_curl-instance-method","html_id":"to_curl-instance-method","name":"to_curl","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/curlify.cr","line_number":18,"url":null},"def":{"name":"to_curl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[\"curl\", method, url, proxy, basic_auth, form_data, headers].reject(&.empty?).join(\" \")"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/DataForm","path":"Crest/DataForm.html","kind":"class","full_name":"Crest::DataForm(T)","name":"DataForm","abstract":false,"superclass":{"html_id":"crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},"ancestors":[{"html_id":"crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/forms/data_form.cr","line_number":9,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"This class lets `crest` emulate a filled-in form\nin which a user has pressed the submit button.\nThis causes `crest` to POST data using the\n\"Content-Type\" `multipart/form-data according` to RFC 2388.\nThis enables uploading of binary files etc.","summary":"<p>This class lets <code>crest</code> emulate a filled-in form in which a user has pressed the submit button.</p>","class_methods":[],"constructors":[{"id":"new(params:T)-class-method","html_id":"new(params:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"args_string":"(params : T)","args_html":"(params : T)","location":{"filename":"src/crest/form.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DataForm(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"generate-instance-method","html_id":"generate-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/forms/data_form.cr","line_number":10,"url":null},"def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"content_type_ch = Channel(String).new(1)\nio = IO::Memory.new\nHTTP::FormData.build(io) do |formdata|\n  content_type_ch.send(formdata.content_type)\n  parsed_params.each do |name, value|\n    add_field(formdata, name.to_s, value)\n  end\nend\n@form_data = io.to_s\n@content_type = content_type_ch.receive\nself\n"}},{"id":"parsed_params-instance-method","html_id":"parsed_params-instance-method","name":"parsed_params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/forms/data_form.cr","line_number":30,"url":null},"def":{"name":"parsed_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crest::ParamsEncoder.flatten_params(@params)"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/Form","path":"Crest/Form.html","kind":"class","full_name":"Crest::Form(T)","name":"Form","abstract":true,"superclass":{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/form.cr","line_number":2,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"crest/Crest/DataForm","kind":"class","full_name":"Crest::DataForm(T)","name":"DataForm"},{"html_id":"crest/Crest/UrlencodedForm","kind":"class","full_name":"Crest::UrlencodedForm(T)","name":"UrlencodedForm"}],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[{"id":"generate(params:Hash)-class-method","html_id":"generate(params:Hash)-class-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"args_string":"(params : Hash)","args_html":"(params : Hash)","location":{"filename":"src/crest/form.cr","line_number":8,"url":null},"def":{"name":"generate","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(new(params)).generate"}}],"constructors":[{"id":"new(params:T)-class-method","html_id":"new(params:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"args_string":"(params : T)","args_html":"(params : T)","location":{"filename":"src/crest/form.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Form(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"content_type-instance-method","html_id":"content_type-instance-method","name":"content_type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/form.cr","line_number":6,"url":null},"def":{"name":"content_type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@content_type"}},{"id":"form_data-instance-method","html_id":"form_data-instance-method","name":"form_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/form.cr","line_number":6,"url":null},"def":{"name":"form_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@form_data"}},{"id":"generate-instance-method","html_id":"generate-instance-method","name":"generate","doc":null,"summary":null,"abstract":true,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/form.cr","line_number":15,"url":null},"def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"params-instance-method","html_id":"params-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/form.cr","line_number":6,"url":null},"def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/Logger","path":"Crest/Logger.html","kind":"class","full_name":"Crest::Logger","name":"Logger","abstract":true,"superclass":{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/logger.cr","line_number":4,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"crest/Crest/CommonLogger","kind":"class","full_name":"Crest::CommonLogger","name":"CommonLogger"}],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(filename:String)-class-method","html_id":"new(filename:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"args_string":"(filename : String)","args_html":"(filename : String)","location":{"filename":"src/crest/logger.cr","line_number":5,"url":null},"def":{"name":"new","args":[{"name":"filename","doc":null,"default_value":"","external_name":"filename","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(File.open(filename, \"w\"))"}},{"id":"new(io:IO=STDOUT)-class-method","html_id":"new(io:IO=STDOUT)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"args_string":"(io : IO = <span class=\"t\">STDOUT</span>)","args_html":"(io : IO = <span class=\"t\">STDOUT</span>)","location":{"filename":"src/crest/logger.cr","line_number":11,"url":null},"def":{"name":"new","args":[{"name":"io","doc":null,"default_value":"STDOUT","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default_formatter:Log::Formatter-instance-method","html_id":"default_formatter:Log::Formatter-instance-method","name":"default_formatter","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Log::Formatter","args_html":" : Log::Formatter","location":{"filename":"src/crest/logger.cr","line_number":23,"url":null},"def":{"name":"default_formatter","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"::Log::Formatter","visibility":"Public","body":"::Log::Formatter.new do |entry, io|\n  io << entry.source\n  (io << \" | \") << (entry.timestamp.to_s(\"%F %T\"))\n  (io << \" \") << entry.message\nend"}},{"id":"filter(patern:String|Regex,replacement:String)-instance-method","html_id":"filter(patern:String|Regex,replacement:String)-instance-method","name":"filter","doc":null,"summary":null,"abstract":false,"args":[{"name":"patern","doc":null,"default_value":"","external_name":"patern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"args_string":"(patern : String | Regex, replacement : String)","args_html":"(patern : String | Regex, replacement : String)","location":{"filename":"src/crest/logger.cr","line_number":35,"url":null},"def":{"name":"filter","args":[{"name":"patern","doc":null,"default_value":"","external_name":"patern","restriction":"String | Regex"},{"name":"replacement","doc":null,"default_value":"","external_name":"replacement","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@filters.push([patern, replacement])"}},{"id":"info(message:String)-instance-method","html_id":"info(message:String)-instance-method","name":"info","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"args_string":"(message : String)","args_html":"(message : String)","location":{"filename":"src/crest/logger.cr","line_number":31,"url":null},"def":{"name":"info","args":[{"name":"message","doc":null,"default_value":"","external_name":"message","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger.info do\n  apply_filters(message)\nend"}},{"id":"request(request:Crest::Request):Nil-instance-method","html_id":"request(request:Crest::Request):Nil-instance-method","name":"request","doc":null,"summary":null,"abstract":true,"args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(request : Crest::Request) : Nil","args_html":"(request : <a href=\"../Crest/Request.html\">Crest::Request</a>) : Nil","location":{"filename":"src/crest/logger.cr","line_number":20,"url":null},"def":{"name":"request","args":[{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}},{"id":"response(response:Crest::Response):Nil-instance-method","html_id":"response(response:Crest::Response):Nil-instance-method","name":"response","doc":null,"summary":null,"abstract":true,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"args_string":"(response : Crest::Response) : Nil","args_html":"(response : <a href=\"../Crest/Response.html\">Crest::Response</a>) : Nil","location":{"filename":"src/crest/logger.cr","line_number":21,"url":null},"def":{"name":"response","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":""}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","location":{"filename":"src/crest/logger.cr","line_number":9,"url":null},"def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @logger.\n{{ call }}\n\n    \n"}}],"types":[]},{"html_id":"crest/Crest/Params","path":"Crest/Params.html","kind":"alias","full_name":"Crest::Params","name":"Params","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crest.cr","line_number":39,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":true,"aliased":"(Hash(String | Symbol, Int32 | String) | Hash(String, Int32 | String) | Hash(String, Int32) | Hash(String, String) | Hash(Symbol, Int32 | String) | Hash(Symbol, Int32) | Hash(Symbol, String))","aliased_html":"Hash(String | Symbol, Int32 | String) | Hash(String, Int32 | String) | Hash(String, Int32) | Hash(String, String) | Hash(Symbol, Int32 | String) | Hash(Symbol, Int32) | Hash(Symbol, String)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crest/Crest/ParamsEncoder","path":"Crest/ParamsEncoder.html","kind":"module","full_name":"Crest::ParamsEncoder","name":"ParamsEncoder","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crest/params_encoder.cr","line_number":2,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"ARRAY_REGEX","name":"ARRAY_REGEX","value":"/[\\[\\]]+\\Z/","doc":null,"summary":null},{"id":"SUBKEYS_REGEX","name":"SUBKEYS_REGEX","value":"/[^\\[\\]]+(?:\\]?\\[\\])?/","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"crest/Crest/ParamsEncoder","kind":"module","full_name":"Crest::ParamsEncoder","name":"ParamsEncoder"}],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"decode(query:String):Hash-instance-method","html_id":"decode(query:String):Hash-instance-method","name":"decode","doc":"Converts the given URI querystring into a hash.\n\n```\nCrest::ParamsEncoder.decode(\"a[]=one&a[]=two&a[]=three&b=true&c=C&d=1\")\n# => {\"a\" => [\"one\", \"two\", \"three\"], \"b\" => \"true\", \"c\" => \"C\", \"d\" => \"1\"}\n```","summary":"<p>Converts the given URI querystring into a hash.</p>","abstract":false,"args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"String"}],"args_string":"(query : String) : Hash","args_html":"(query : String) : Hash","location":{"filename":"src/crest/params_encoder.cr","line_number":31,"url":null},"def":{"name":"decode","args":[{"name":"query","doc":null,"default_value":"","external_name":"query","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash","visibility":"Public","body":"params = {} of String => Type\n(query.split(\"&\")).each do |pair|\n  key, value = pair.split(\"=\", 2)\n  key = URI.decode(key)\n  value = URI.decode(value)\n  decode_pair(params, key, value)\nend\nparams\n"}},{"id":"encode(params:Hash):String-instance-method","html_id":"encode(params:Hash):String-instance-method","name":"encode","doc":"Converts the given params into a URI querystring. Keys and values\nwill converted to strings and appropriately escaped for the URI.\n\n```\nCrest::ParamsEncoder.encode({\"a\" => [\"one\", \"two\", \"three\"], \"b\" => true, \"c\" => \"C\", \"d\" => 1})\n# => 'a[]=one&a[]=two&a[]=three&b=true&c=C&d=1'\n```","summary":"<p>Converts the given params into a URI querystring.</p>","abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"args_string":"(params : Hash) : String","args_html":"(params : Hash) : String","location":{"filename":"src/crest/params_encoder.cr","line_number":17,"url":null},"def":{"name":"encode","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"Hash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"HTTP::Params.build do |form|\n  (flatten_params(params)).each do |name, value|\n    form.add(name.to_s, value.to_s)\n  end\nend"}},{"id":"flatten_params(object:Hash,parent_key=nil)-instance-method","html_id":"flatten_params(object:Hash,parent_key=nil)-instance-method","name":"flatten_params","doc":"Transform deeply nested params containers into a flat hash of `key => value`.\n\n```\nCrest::ParamsEncoder.flatten_params({:key1 => {:key2 => \"123\"}})\n# => [{\"key1[key2]\", \"123\"}]\n```","summary":"<p>Transform deeply nested params containers into a flat hash of <code>key => value</code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"args_string":"(object : Hash, parent_key = <span class=\"n\">nil</span>)","args_html":"(object : Hash, parent_key = <span class=\"n\">nil</span>)","location":{"filename":"src/crest/params_encoder.cr","line_number":95,"url":null},"def":{"name":"flatten_params","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Hash"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"object.reduce([] of Tuple(String, TextValue | File)) do |memo, item|\n  k, v = item\n  processed_key = parent_key ? \"#{parent_key}[#{k}]\" : k.to_s\n  case v\n  when Hash, Array\n    memo = memo + (flatten_params(v, processed_key))\n  else\n    memo << {processed_key, v}\n  end\n  memo\nend"}},{"id":"flatten_params(object:Array,parent_key=nil)-instance-method","html_id":"flatten_params(object:Array,parent_key=nil)-instance-method","name":"flatten_params","doc":"Transform deeply nested params containers into a flat hash of `key => value`.\n\n```\nCrest::ParamsEncoder.flatten_params({:key1 => {:arr => [\"1\", \"2\", \"3\"]}})\n# => [{\"key1[arr][]\", \"1\"}, {\"key1[arr][]\", \"2\"}, {\"key1[arr][]\", \"3\"}]\n```","summary":"<p>Transform deeply nested params containers into a flat hash of <code>key => value</code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Array"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"args_string":"(object : Array, parent_key = <span class=\"n\">nil</span>)","args_html":"(object : Array, parent_key = <span class=\"n\">nil</span>)","location":{"filename":"src/crest/params_encoder.cr","line_number":118,"url":null},"def":{"name":"flatten_params","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Array"},{"name":"parent_key","doc":null,"default_value":"nil","external_name":"parent_key","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"object.reduce([] of Tuple(String, TextValue | File)) do |memo, item|\n  k = :\"\"\n  v = item\n  processed_key = parent_key ? \"#{parent_key}[#{k}]\" : k.to_s\n  memo << {processed_key, v}\n  memo\nend"}}],"macros":[],"types":[{"html_id":"crest/Crest/ParamsEncoder/Type","path":"Crest/ParamsEncoder/Type.html","kind":"alias","full_name":"Crest::ParamsEncoder::Type","name":"Type","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crest/params_encoder.cr","line_number":5,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":true,"aliased":"(Array(Crest::ParamsEncoder::Type) | Hash(String, Crest::ParamsEncoder::Type) | String | Nil)","aliased_html":"Array(<a href=\"../../Crest/ParamsEncoder/Type.html\">Crest::ParamsEncoder::Type</a>) | Hash(String, <a href=\"../../Crest/ParamsEncoder/Type.html\">Crest::ParamsEncoder::Type</a>) | String | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest/ParamsEncoder","kind":"module","full_name":"Crest::ParamsEncoder","name":"ParamsEncoder"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"crest/Crest/Redirector","path":"Crest/Redirector.html","kind":"class","full_name":"Crest::Redirector","name":"Redirector","abstract":false,"superclass":{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/redirector.cr","line_number":2,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(response:Crest::Response,request:Crest::Request)-class-method","html_id":"new(response:Crest::Response,request:Crest::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(response : Crest::Response, request : Crest::Request)","args_html":"(response : <a href=\"../Crest/Response.html\">Crest::Response</a>, request : <a href=\"../Crest/Request.html\">Crest::Request</a>)","location":{"filename":"src/crest/redirector.cr","line_number":3,"url":null},"def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":"Crest::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response, request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"follow:Crest::Response-instance-method","html_id":"follow:Crest::Response-instance-method","name":"follow","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Response","args_html":" : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/redirector.cr","line_number":6,"url":null},"def":{"name":"follow","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"case @response\nwhen .success?\n  @response\nwhen .redirect?\n  check_max_redirects\n  @request.max_redirects > 0 ? follow_redirection : @response\nelse\n  if @request.handle_errors\n    raise_exception!\n  end\n  @response\nend"}},{"id":"follow(&block:Crest::Response->)-instance-method","html_id":"follow(&block:Crest::Response->)-instance-method","name":"follow","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : Crest::Response -> )","args_html":"(&block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> )","location":{"filename":"src/crest/redirector.cr","line_number":20,"url":null},"def":{"name":"follow","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"","visibility":"Public","body":"case @response\nwhen .success?\n  @response\nwhen .redirect?\n  check_max_redirects\n  @request.max_redirects > 0 ? follow_redirection(&block) : @response\nelse\n  if @request.handle_errors\n    raise_exception!\n  end\n  @response\nend"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/Request","path":"Crest/Request.html","kind":"class","full_name":"Crest::Request","name":"Request","abstract":false,"superclass":{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/request.cr","line_number":50,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"A class that used to make the requests\nThe result of a `Crest::Request` is a `Crest::Response` object.\n\nSimple example:\n\n```\nrequest = Crest::Request.new(method: :post, url: \"http://httpbin.org/post\", form: {:age => 27}, params: {:name => \"Kurt\"})\nrequest.execute\n\nCrest::Request.execute(method: :post, url: \"http://httpbin.org/post\", form: {:age => 27}.to_json)\n\nCrest::Request.post(url: http://httpbin.org/post\", form: {:age => 27}.to_json)\n```\n\nBlock style:\n\n```\nrequest = Crest::Request.new(:get, http://httpbin.org/get\") do |request|\n  request.headers.add(\"foo\", \"bar\")\n  request.user = \"username\"\n  request.password = \"password\"\nend\n\nresponse = request.execute\n```\n\nMandatory parameters:\n* `method`\n* `url`\n\nOptional parameters:\n* `headers` a hash containing the request headers\n* `cookies` a hash containing the request cookies\n* `form` a hash containing form params (or a raw string)\n* `params` a hash that represent query-string separated from the preceding part by a question mark (?)\n   a sequence of attributeâ€“value pairs separated by a delimiter (&).\n* `auth` access authentication method `basic` or `digest` (default to `basic`)\n* `user` and `password` for authentication\n* `tls` configuring TLS settings\n* `p_addr`, `p_port`, `p_user`, `p_pass` for proxy\n* `max_redirects` maximum number of redirections (default to `10`)\n* `logging` enable logging (default to `false`)\n* `logger` set logger (default to `Crest::CommonLogger`)\n* `handle_errors` error handling (default to `true`)\n* `close_connection` close the connection after request is completed (default to `true`)\n* `http_client` instance of `HTTP::Client`","summary":"<p>A class that used to make the requests The result of a <code><a href=\"../Crest/Request.html\">Crest::Request</a></code> is a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> object.</p>","class_methods":[{"id":"delete(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"delete(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"delete","doc":"Execute a DELETE request and and yields the `Crest::Response` to the block.\n\n```\nCrest::Request.delete(\"http://httpbin.org/delete\") do |resp|\n  while line = resp.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a DELETE request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:delete, url, **args)\nresponse = request.execute(&block)\n"}},{"id":"delete(url:String,**args):Crest::Response-class-method","html_id":"delete(url:String,**args):Crest::Response-class-method","name":"delete","doc":"Execute a DELETE request and returns a `Crest::Response`.\n\n```\nCrest::Request.delete(\"http://httpbin.org/delete\")\n```","summary":"<p>Execute a DELETE request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"delete","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:delete, url, **args)\nrequest.execute\n"}},{"id":"execute(method,url,**args):Crest::Response-class-method","html_id":"execute(method,url,**args):Crest::Response-class-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"args_string":"(method, url, **args) : Crest::Response","args_html":"(method, url, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":81,"url":null},"def":{"name":"execute","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = new(method, url, **args)\nrequest.execute\n"}},{"id":"execute(method,url,**args,&block:Crest::Response->):Nil-class-method","html_id":"execute(method,url,**args,&block:Crest::Response->):Nil-class-method","name":"execute","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"args_string":"(method, url, **args, &block : Crest::Response -> ) : Nil","args_html":"(method, url, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":86,"url":null},"def":{"name":"execute","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":""},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":""}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = new(method, url, **args)\nrequest.execute(&block)\n"}},{"id":"get(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"get(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"get","doc":"Execute a GET request and and yields the `Crest::Response` to the block.\n\n```\nCrest::Request.get(\"http://httpbin.org/get\") do |resp|\n  while line = resp.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a GET request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:get, url, **args)\nresponse = request.execute(&block)\n"}},{"id":"get(url:String,**args):Crest::Response-class-method","html_id":"get(url:String,**args):Crest::Response-class-method","name":"get","doc":"Execute a GET request and returns a `Crest::Response`.\n\n```\nCrest::Request.get(\"http://httpbin.org/get\")\n```","summary":"<p>Execute a GET request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"get","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:get, url, **args)\nrequest.execute\n"}},{"id":"head(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"head(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"head","doc":"Execute a HEAD request and and yields the `Crest::Response` to the block.\n\n```\nCrest::Request.head(\"http://httpbin.org/head\") do |resp|\n  while line = resp.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a HEAD request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"head","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:head, url, **args)\nresponse = request.execute(&block)\n"}},{"id":"head(url:String,**args):Crest::Response-class-method","html_id":"head(url:String,**args):Crest::Response-class-method","name":"head","doc":"Execute a HEAD request and returns a `Crest::Response`.\n\n```\nCrest::Request.head(\"http://httpbin.org/head\")\n```","summary":"<p>Execute a HEAD request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"head","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:head, url, **args)\nrequest.execute\n"}},{"id":"options(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"options(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"options","doc":"Execute a OPTIONS request and and yields the `Crest::Response` to the block.\n\n```\nCrest::Request.options(\"http://httpbin.org/options\") do |resp|\n  while line = resp.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a OPTIONS request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:options, url, **args)\nresponse = request.execute(&block)\n"}},{"id":"options(url:String,**args):Crest::Response-class-method","html_id":"options(url:String,**args):Crest::Response-class-method","name":"options","doc":"Execute a OPTIONS request and returns a `Crest::Response`.\n\n```\nCrest::Request.options(\"http://httpbin.org/options\")\n```","summary":"<p>Execute a OPTIONS request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"options","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:options, url, **args)\nrequest.execute\n"}},{"id":"patch(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"patch(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"patch","doc":"Execute a PATCH request and and yields the `Crest::Response` to the block.\n\n```\nCrest::Request.patch(\"http://httpbin.org/patch\") do |resp|\n  while line = resp.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a PATCH request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:patch, url, **args)\nresponse = request.execute(&block)\n"}},{"id":"patch(url:String,**args):Crest::Response-class-method","html_id":"patch(url:String,**args):Crest::Response-class-method","name":"patch","doc":"Execute a PATCH request and returns a `Crest::Response`.\n\n```\nCrest::Request.patch(\"http://httpbin.org/patch\")\n```","summary":"<p>Execute a PATCH request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"patch","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:patch, url, **args)\nrequest.execute\n"}},{"id":"post(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"post(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"post","doc":"Execute a POST request and and yields the `Crest::Response` to the block.\n\n```\nCrest::Request.post(\"http://httpbin.org/post\") do |resp|\n  while line = resp.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a POST request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:post, url, **args)\nresponse = request.execute(&block)\n"}},{"id":"post(url:String,**args):Crest::Response-class-method","html_id":"post(url:String,**args):Crest::Response-class-method","name":"post","doc":"Execute a POST request and returns a `Crest::Response`.\n\n```\nCrest::Request.post(\"http://httpbin.org/post\")\n```","summary":"<p>Execute a POST request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"post","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:post, url, **args)\nrequest.execute\n"}},{"id":"put(url:String,**args,&block:Crest::Response->):Nil-class-method","html_id":"put(url:String,**args,&block:Crest::Response->):Nil-class-method","name":"put","doc":"Execute a PUT request and and yields the `Crest::Response` to the block.\n\n```\nCrest::Request.put(\"http://httpbin.org/put\") do |resp|\n  while line = resp.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>Execute a PUT request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args, &block : Crest::Response -> ) : Nil","args_html":"(url : String, **args, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"request = Request.new(:put, url, **args)\nresponse = request.execute(&block)\n"}},{"id":"put(url:String,**args):Crest::Response-class-method","html_id":"put(url:String,**args):Crest::Response-class-method","name":"put","doc":"Execute a PUT request and returns a `Crest::Response`.\n\n```\nCrest::Request.put(\"http://httpbin.org/put\")\n```","summary":"<p>Execute a PUT request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args) : Crest::Response","args_html":"(url : String, **args) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":144,"url":null},"def":{"name":"put","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"request = Request.new(:put, url, **args)\nrequest.execute\n"}}],"constructors":[{"id":"new(method:Symbol,url:String,**args)-class-method","html_id":"new(method:Symbol,url:String,**args)-class-method","name":"new","doc":"When block is not given.","summary":"<p>When block is not given.</p>","abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(method : Symbol, url : String, **args)","args_html":"(method : Symbol, url : String, **args)","location":{"filename":"src/crest/request.cr","line_number":140,"url":null},"def":{"name":"new","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(method, url, **args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(method:Symbol,url:String,*,headers={}ofString=>String,cookies={}ofString=>String,form={}ofString=>String,params={}ofString=>String,max_redirects=10,**options,&)-class-method","html_id":"new(method:Symbol,url:String,*,headers={}ofString=>String,cookies={}ofString=>String,form={}ofString=>String,params={}ofString=>String,max_redirects=10,**options,&)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"cookies","doc":null,"default_value":"{} of String => String","external_name":"cookies","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""},{"name":"max_redirects","doc":null,"default_value":"10","external_name":"max_redirects","restriction":""}],"args_string":"(method : Symbol, url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, cookies = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, max_redirects = <span class=\"n\">10</span>, **options, &)","args_html":"(method : Symbol, url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, cookies = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, max_redirects = <span class=\"n\">10</span>, **options, &)","location":{"filename":"src/crest/request.cr","line_number":91,"url":null},"def":{"name":"new","args":[{"name":"method","doc":null,"default_value":"","external_name":"method","restriction":"Symbol"},{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"cookies","doc":null,"default_value":"{} of String => String","external_name":"cookies","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""},{"name":"max_redirects","doc":null,"default_value":"10","external_name":"max_redirects","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":2,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(method, url, **options, headers: headers, cookies: cookies, form: form, params: params, max_redirects: max_redirects) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"auth:String-instance-method","html_id":"auth:String-instance-method","name":"auth","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"auth","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@auth"}},{"id":"close(*args,**options)-instance-method","html_id":"close(*args,**options)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.close(*args, **options)"}},{"id":"close(*args,**options,&)-instance-method","html_id":"close(*args,**options,&)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.close(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"close_connection:Bool-instance-method","html_id":"close_connection:Bool-instance-method","name":"close_connection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"close_connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@close_connection"}},{"id":"cookies:HTTP::Cookies-instance-method","html_id":"cookies:HTTP::Cookies-instance-method","name":"cookies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Cookies","args_html":" : HTTP::Cookies","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"cookies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@cookies"}},{"id":"execute(&block:Crest::Response->):Nil-instance-method","html_id":"execute(&block:Crest::Response->):Nil-instance-method","name":"execute","doc":"Execute streaming HTTP request","summary":"<p>Execute streaming HTTP request</p>","abstract":false,"args":[],"args_string":"(&block : Crest::Response -> ) : Nil","args_html":"(&block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/request.cr","line_number":188,"url":null},"def":{"name":"execute","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"begin\n  @http_client.set_proxy(@proxy)\n  authenticate!\n  if @logging\n    @logger.request(self)\n  end\n  @http_request = new_http_request(@method, @url, @headers, @form_data)\n  @http_client.exec(@http_request) do |http_response|\n    response = process_result(http_response, &block)\n    if response\n      yield response\n    end\n  end\nensure\n  if @close_connection\n    @http_client.close\n  end\nend"}},{"id":"execute:Crest::Response-instance-method","html_id":"execute:Crest::Response-instance-method","name":"execute","doc":"Execute HTTP request","summary":"<p>Execute HTTP request</p>","abstract":false,"args":[],"args_string":" : Crest::Response","args_html":" : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/request.cr","line_number":173,"url":null},"def":{"name":"execute","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"begin\n  @http_client.set_proxy(@proxy)\n  authenticate!\n  if @logging\n    @logger.request(self)\n  end\n  @http_request = new_http_request(@method, @url, @headers, @form_data)\n  http_response = @http_client.exec(@http_request)\n  process_result(http_response)\nensure\n  if @close_connection\n    @http_client.close\n  end\nend"}},{"id":"form_data:String?-instance-method","html_id":"form_data:String?-instance-method","name":"form_data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"form_data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@form_data"}},{"id":"handle_errors:Bool-instance-method","html_id":"handle_errors:Bool-instance-method","name":"handle_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"handle_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handle_errors"}},{"id":"headers:HTTP::Headers-instance-method","html_id":"headers:HTTP::Headers-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Headers","args_html":" : HTTP::Headers","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers"}},{"id":"host(*args,**options)-instance-method","html_id":"host(*args,**options)-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"host","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.host(*args, **options)"}},{"id":"host(*args,**options,&)-instance-method","html_id":"host(*args,**options,&)-instance-method","name":"host","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"host","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.host(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"http_client:HTTP::Client-instance-method","html_id":"http_client:HTTP::Client-instance-method","name":"http_client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client","args_html":" : <a href=\"../HTTP/Client.html\">HTTP::Client</a>","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"http_client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client"}},{"id":"http_request:HTTP::Request-instance-method","html_id":"http_request:HTTP::Request-instance-method","name":"http_request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Request","args_html":" : HTTP::Request","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"http_request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_request"}},{"id":"logger:Crest::Logger-instance-method","html_id":"logger:Crest::Logger-instance-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Logger","args_html":" : <a href=\"../Crest/Logger.html\">Crest::Logger</a>","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger"}},{"id":"logging:Bool-instance-method","html_id":"logging:Bool-instance-method","name":"logging","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"logging","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logging"}},{"id":"max_redirects:Int32-instance-method","html_id":"max_redirects:Int32-instance-method","name":"max_redirects","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","args_html":" : Int32","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"max_redirects","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@max_redirects"}},{"id":"method:String-instance-method","html_id":"method:String-instance-method","name":"method","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"method","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@method"}},{"id":"p_addr:String?-instance-method","html_id":"p_addr:String?-instance-method","name":"p_addr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"p_addr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_addr"}},{"id":"p_pass:String?-instance-method","html_id":"p_pass:String?-instance-method","name":"p_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"p_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_pass"}},{"id":"p_port:Int32?-instance-method","html_id":"p_port:Int32?-instance-method","name":"p_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","args_html":" : Int32?","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"p_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_port"}},{"id":"p_user:String?-instance-method","html_id":"p_user:String?-instance-method","name":"p_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"p_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_user"}},{"id":"password:String?-instance-method","html_id":"password:String?-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/request.cr","line_number":77,"url":null},"def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password"}},{"id":"password=(password)-instance-method","html_id":"password=(password)-instance-method","name":"password=","doc":null,"summary":null,"abstract":false,"args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""}],"args_string":"(password)","args_html":"(password)","location":{"filename":"src/crest/request.cr","line_number":77,"url":null},"def":{"name":"password=","args":[{"name":"password","doc":null,"default_value":"","external_name":"password","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password = password"}},{"id":"port(*args,**options)-instance-method","html_id":"port(*args,**options)-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"port","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.port(*args, **options)"}},{"id":"port(*args,**options,&)-instance-method","html_id":"port(*args,**options,&)-instance-method","name":"port","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"port","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.port(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"proxy:HTTP::Proxy::Client?-instance-method","html_id":"proxy:HTTP::Proxy::Client?-instance-method","name":"proxy","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Proxy::Client?","args_html":" : HTTP::Proxy::Client?","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"proxy","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@proxy"}},{"id":"redirection_history:Array(Crest::Response)-instance-method","html_id":"redirection_history:Array(Crest::Response)-instance-method","name":"redirection_history","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Crest::Response)","args_html":" : Array(<a href=\"../Crest/Response.html\">Crest::Response</a>)","location":{"filename":"src/crest/request.cr","line_number":77,"url":null},"def":{"name":"redirection_history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redirection_history"}},{"id":"redirection_history=(redirection_history)-instance-method","html_id":"redirection_history=(redirection_history)-instance-method","name":"redirection_history=","doc":null,"summary":null,"abstract":false,"args":[{"name":"redirection_history","doc":null,"default_value":"","external_name":"redirection_history","restriction":""}],"args_string":"(redirection_history)","args_html":"(redirection_history)","location":{"filename":"src/crest/request.cr","line_number":77,"url":null},"def":{"name":"redirection_history=","args":[{"name":"redirection_history","doc":null,"default_value":"","external_name":"redirection_history","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@redirection_history = redirection_history"}},{"id":"tls?(*args,**options)-instance-method","html_id":"tls?(*args,**options)-instance-method","name":"tls?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"tls?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.tls?(*args, **options)"}},{"id":"tls?(*args,**options,&)-instance-method","html_id":"tls?(*args,**options,&)-instance-method","name":"tls?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/request.cr","line_number":79,"url":null},"def":{"name":"tls?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client.tls?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_curl-instance-method","html_id":"to_curl-instance-method","name":"to_curl","doc":"Convert `Request` object to cURL command","summary":"<p>Convert <code><a href=\"../Crest/Request.html\">Request</a></code> object to cURL command</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/request.cr","line_number":219,"url":null},"def":{"name":"to_curl","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crest::Curlify.to_curl(self)"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crest/request.cr","line_number":73,"url":null},"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"user:String?-instance-method","html_id":"user:String?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/request.cr","line_number":77,"url":null},"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}},{"id":"user=(user)-instance-method","html_id":"user=(user)-instance-method","name":"user=","doc":null,"summary":null,"abstract":false,"args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"args_string":"(user)","args_html":"(user)","location":{"filename":"src/crest/request.cr","line_number":77,"url":null},"def":{"name":"user=","args":[{"name":"user","doc":null,"default_value":"","external_name":"user","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user = user"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/RequestFailed","path":"Crest/RequestFailed.html","kind":"class","full_name":"Crest::RequestFailed","name":"RequestFailed","abstract":false,"superclass":{"html_id":"crest/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"crest/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/exceptions.cr","line_number":94,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"This is the base `Crest` exception class. Rescue it if you want to\ncatch any exception that your request might raise\nYou can see anything about the response via `e.response`.\nFor example, the entire result body (which is\nprobably an HTML error page) is `e.response.body`.\n\nHash of HTTP status `code => message`.\n\n* **1xx**: Informational - Request received, continuing process\n* **2xx**: Success - The action was successfully received, understood, and\n   accepted\n* **3xx**: Redirection - Further action must be taken in order to complete the\n   request\n* **4xx**: Client Error - The request contains bad syntax or cannot be fulfilled\n* **5xx**: Server Error - The server failed to fulfill an apparently valid\n   request\n\nSee [HTTP Status Code Registry](http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml)\nfor more Information.","summary":"<p>This is the base <code><a href=\"../Crest.html\">Crest</a></code> exception class.</p>","class_methods":[{"id":"subclass_by_status_code(status_code)-class-method","html_id":"subclass_by_status_code(status_code)-class-method","name":"subclass_by_status_code","doc":null,"summary":null,"abstract":false,"args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":""}],"args_string":"(status_code)","args_html":"(status_code)","location":{"filename":"src/crest/exceptions.cr","line_number":99,"url":null},"def":{"name":"subclass_by_status_code","args":[{"name":"status_code","doc":null,"default_value":"","external_name":"status_code","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"EXCEPTIONS_MAP.fetch(status_code, self)"}}],"constructors":[{"id":"new(response)-class-method","html_id":"new(response)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"args_string":"(response)","args_html":"(response)","location":{"filename":"src/crest/exceptions.cr","line_number":103,"url":null},"def":{"name":"new","args":[{"name":"response","doc":null,"default_value":"","external_name":"response","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(response)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"http_code-instance-method","html_id":"http_code-instance-method","name":"http_code","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/exceptions.cr","line_number":107,"url":null},"def":{"name":"http_code","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response.status_code.to_i"}},{"id":"message-instance-method","html_id":"message-instance-method","name":"message","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/exceptions.cr","line_number":111,"url":null},"def":{"name":"message","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"HTTP status code #{http_code}: #{STATUSES[http_code]}\""}},{"id":"response:Crest::Response-instance-method","html_id":"response:Crest::Response-instance-method","name":"response","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Response","args_html":" : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/exceptions.cr","line_number":95,"url":null},"def":{"name":"response","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@response"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/Resource","path":"Crest/Resource.html","kind":"class","full_name":"Crest::Resource","name":"Resource","abstract":false,"superclass":{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/resource.cr","line_number":60,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"A class that can be instantiated for access to a RESTful resource,\nincluding authentication, proxy and logging.\n\nSimple example:\n\n```\nresource = Crest::Resource.new(\"https://httpbin.org/get\")\nresponse = resource.get\n```\n\nBlock style:\n\n```\nresource = Crest::Resource.new(\"http://httpbin.org\") do |res|\n  res.headers.merge!({\"foo\" => \"bar\"})\nend\n\nresponse = resource[\"/headers\"].get\n```\n\nWith HTTP basic authentication:\n\n```\nresource = Crest::Resource.new(\"https://httpbin.org/get\", user: \"user\", password: \"password\")\n```\n\nUse the `[]` syntax to allocate subresources:\n\n```\nresource = Crest::Resource.new(\"https://httpbin.org\")\nresource[\"/get\"].get\n```\n\nYou can pass advanced parameters like default `params` or `headers`:\n\n```\nresource = Crest::Resource.new(\n  \"https://httpbin.org\",\n  params: {\"key\" => \"key\"},\n  headers: {\"Content-Type\" => \"application/json\"}\n)\nresponse = response[\"/post\"].post(\n  form: {:height => 100, \"width\" => \"100\"},\n  params: {:secret => \"secret\"}\n)\n```\nIf you want to stream the data from the response you can pass a block:\n\n```\nresource = Crest::Resource.new(\"http://httpbin.org\")\nresource[\"/stream/5\"].get do |response|\n  while line = response.body_io.gets\n    puts line\n  end\nend\n```","summary":"<p>A class that can be instantiated for access to a RESTful resource, including authentication, proxy and logging.</p>","class_methods":[],"constructors":[{"id":"new(url:String,*,headers={}ofString=>String,params:Params={}ofString=>String,**options,&)-class-method","html_id":"new(url:String,*,headers={}ofString=>String,params:Params={}ofString=>String,**options,&)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":"Params"}],"args_string":"(url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params : Params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, **options, &)","args_html":"(url : String, *, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params : <a href=\"../Crest/Params.html\">Params</a> = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, **options, &)","location":{"filename":"src/crest/resource.cr","line_number":68,"url":null},"def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":"Params"}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":1,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, **options, headers: headers, params: params) do |_arg0|\n  yield _arg0\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(url:String,**args)-class-method","html_id":"new(url:String,**args)-class-method","name":"new","doc":"When block is not given.","summary":"<p>When block is not given.</p>","abstract":false,"args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"args_string":"(url : String, **args)","args_html":"(url : String, **args)","location":{"filename":"src/crest/resource.cr","line_number":93,"url":null},"def":{"name":"new","args":[{"name":"url","doc":null,"default_value":"","external_name":"url","restriction":"String"}],"double_splat":{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(url, **args)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](suburl)-instance-method","html_id":"[](suburl)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":""}],"args_string":"(suburl)","args_html":"(suburl)","location":{"filename":"src/crest/resource.cr","line_number":130,"url":null},"def":{"name":"[]","args":[{"name":"suburl","doc":null,"default_value":"","external_name":"suburl","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url = concat_urls(@base_url, suburl)\nself\n"}},{"id":"close(*args,**options,&)-instance-method","html_id":"close(*args,**options,&)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/resource.cr","line_number":65,"url":null},"def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client.close(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"close(*args,**options)-instance-method","html_id":"close(*args,**options)-instance-method","name":"close","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/resource.cr","line_number":65,"url":null},"def":{"name":"close","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client.close(*args, **options)"}},{"id":"close_connection:Bool-instance-method","html_id":"close_connection:Bool-instance-method","name":"close_connection","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"close_connection","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@close_connection"}},{"id":"closed?(*args,**options,&)-instance-method","html_id":"closed?(*args,**options,&)-instance-method","name":"closed?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/resource.cr","line_number":66,"url":null},"def":{"name":"closed?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client.closed?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"closed?(*args,**options)-instance-method","html_id":"closed?(*args,**options)-instance-method","name":"closed?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/resource.cr","line_number":66,"url":null},"def":{"name":"closed?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client.closed?(*args, **options)"}},{"id":"delete(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","html_id":"delete(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","name":"delete","doc":"Execute a DELETE request and and yields the `Crest::Response` to the block.","summary":"<p>Execute a DELETE request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : Crest::Response -> ) : Nil","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"delete","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:delete, form, &block)\n"}},{"id":"delete(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","html_id":"delete(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","name":"delete","doc":"Execute a DELETE request and returns a `Crest::Response`.","summary":"<p>Execute a DELETE request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Crest::Response","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"delete","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:delete, form)\n"}},{"id":"get(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","html_id":"get(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","name":"get","doc":"Execute a GET request and and yields the `Crest::Response` to the block.","summary":"<p>Execute a GET request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : Crest::Response -> ) : Nil","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"get","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:get, form, &block)\n"}},{"id":"get(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","html_id":"get(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","name":"get","doc":"Execute a GET request and returns a `Crest::Response`.","summary":"<p>Execute a GET request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Crest::Response","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"get","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:get, form)\n"}},{"id":"handle_errors:Bool-instance-method","html_id":"handle_errors:Bool-instance-method","name":"handle_errors","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"handle_errors","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@handle_errors"}},{"id":"head(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","html_id":"head(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","name":"head","doc":"Execute a HEAD request and and yields the `Crest::Response` to the block.","summary":"<p>Execute a HEAD request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : Crest::Response -> ) : Nil","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"head","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:head, form, &block)\n"}},{"id":"head(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","html_id":"head(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","name":"head","doc":"Execute a HEAD request and returns a `Crest::Response`.","summary":"<p>Execute a HEAD request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Crest::Response","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"head","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:head, form)\n"}},{"id":"headers:Hash(String,String)-instance-method","html_id":"headers:Hash(String,String)-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, String)","args_html":" : Hash(String, String)","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@headers"}},{"id":"http_client:HTTP::Client-instance-method","html_id":"http_client:HTTP::Client-instance-method","name":"http_client","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client","args_html":" : <a href=\"../HTTP/Client.html\">HTTP::Client</a>","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"http_client","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client"}},{"id":"logger:Crest::Logger-instance-method","html_id":"logger:Crest::Logger-instance-method","name":"logger","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Logger","args_html":" : <a href=\"../Crest/Logger.html\">Crest::Logger</a>","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"logger","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logger"}},{"id":"logging:Bool-instance-method","html_id":"logging:Bool-instance-method","name":"logging","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","args_html":" : Bool","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"logging","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@logging"}},{"id":"options(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","html_id":"options(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","name":"options","doc":"Execute a OPTIONS request and and yields the `Crest::Response` to the block.","summary":"<p>Execute a OPTIONS request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : Crest::Response -> ) : Nil","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"options","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:options, form, &block)\n"}},{"id":"options(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","html_id":"options(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","name":"options","doc":"Execute a OPTIONS request and returns a `Crest::Response`.","summary":"<p>Execute a OPTIONS request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Crest::Response","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"options","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:options, form)\n"}},{"id":"p_addr:String?-instance-method","html_id":"p_addr:String?-instance-method","name":"p_addr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"p_addr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_addr"}},{"id":"p_pass:String?-instance-method","html_id":"p_pass:String?-instance-method","name":"p_pass","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"p_pass","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_pass"}},{"id":"p_port:Int32?-instance-method","html_id":"p_port:Int32?-instance-method","name":"p_port","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32?","args_html":" : Int32?","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"p_port","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_port"}},{"id":"p_user:String?-instance-method","html_id":"p_user:String?-instance-method","name":"p_user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"p_user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@p_user"}},{"id":"params:Hash(String|Symbol,Int32|String)|Hash(String,Int32|String)|Hash(String,Int32)|Hash(String,String)|Hash(Symbol,Int32|String)|Hash(Symbol,Int32)|Hash(Symbol,String)-instance-method","html_id":"params:Hash(String|Symbol,Int32|String)|Hash(String,Int32|String)|Hash(String,Int32)|Hash(String,String)|Hash(Symbol,Int32|String)|Hash(Symbol,Int32)|Hash(Symbol,String)-instance-method","name":"params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String | Symbol, Int32 | String) | Hash(String, Int32 | String) | Hash(String, Int32) | Hash(String, String) | Hash(Symbol, Int32 | String) | Hash(Symbol, Int32) | Hash(Symbol, String)","args_html":" : Hash(String | Symbol, Int32 | String) | Hash(String, Int32 | String) | Hash(String, Int32) | Hash(String, String) | Hash(Symbol, Int32 | String) | Hash(Symbol, Int32) | Hash(Symbol, String)","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@params"}},{"id":"password:String?-instance-method","html_id":"password:String?-instance-method","name":"password","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"password","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@password"}},{"id":"patch(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","html_id":"patch(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","name":"patch","doc":"Execute a PATCH request and returns a `Crest::Response`.","summary":"<p>Execute a PATCH request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Crest::Response","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"patch","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:patch, form)\n"}},{"id":"patch(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","html_id":"patch(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","name":"patch","doc":"Execute a PATCH request and and yields the `Crest::Response` to the block.","summary":"<p>Execute a PATCH request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : Crest::Response -> ) : Nil","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"patch","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:patch, form, &block)\n"}},{"id":"post(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","html_id":"post(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","name":"post","doc":"Execute a POST request and and yields the `Crest::Response` to the block.","summary":"<p>Execute a POST request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : Crest::Response -> ) : Nil","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"post","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:post, form, &block)\n"}},{"id":"post(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","html_id":"post(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","name":"post","doc":"Execute a POST request and returns a `Crest::Response`.","summary":"<p>Execute a POST request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Crest::Response","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"post","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:post, form)\n"}},{"id":"put(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","html_id":"put(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String,&block:Crest::Response->):Nil-instance-method","name":"put","doc":"Execute a PUT request and and yields the `Crest::Response` to the block.","summary":"<p>Execute a PUT request and and yields the <code><a href=\"../Crest/Response.html\">Crest::Response</a></code> to the block.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : Crest::Response -> ) : Nil","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, &block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> ) : Nil","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"put","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"Nil","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:put, form, &block)\n"}},{"id":"put(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","html_id":"put(suburl:String?=nil,*,form={}ofString=>String,headers={}ofString=>String,params={}ofString=>String):Crest::Response-instance-method","name":"put","doc":"Execute a PUT request and returns a `Crest::Response`.","summary":"<p>Execute a PUT request and returns a <code><a href=\"../Crest/Response.html\">Crest::Response</a></code>.</p>","abstract":false,"args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"args_string":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : Crest::Response","args_html":"(suburl : String? = <span class=\"n\">nil</span>, *, form = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, headers = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>, params = {} <span class=\"k\">of</span> <span class=\"t\">String</span> => <span class=\"t\">String</span>) : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/resource.cr","line_number":97,"url":null},"def":{"name":"put","args":[{"name":"suburl","doc":null,"default_value":"nil","external_name":"suburl","restriction":"String | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"form","doc":null,"default_value":"{} of String => String","external_name":"form","restriction":""},{"name":"headers","doc":null,"default_value":"{} of String => String","external_name":"headers","restriction":""},{"name":"params","doc":null,"default_value":"{} of String => String","external_name":"params","restriction":""}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"if suburl\n  @url = concat_urls(@base_url, suburl)\nend\n@headers = @headers.merge(headers)\n@params = merge_params(params)\nexecute_request(:put, form)\n"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@url"}},{"id":"user:String?-instance-method","html_id":"user:String?-instance-method","name":"user","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/resource.cr","line_number":61,"url":null},"def":{"name":"user","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@user"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/Response","path":"Crest/Response.html","kind":"class","full_name":"Crest::Response","name":"Response","abstract":false,"superclass":{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/response.cr","line_number":17,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"Response objects have several useful methods:\n\n* `body`: The response body as a `String`\n* `body_io`: The response body as a `IO`\n* `status`: The response status as a `HTTP::Status`\n* `status_code`: The HTTP response code\n* `headers`: A hash of HTTP response headers\n* `cookies`: A hash of HTTP cookies set by the server\n* `request`: The `Crest::Request` object used to make the request\n* `http_client_res`: The `HTTP::Client::Response` object\n* `history`: A list of each response received in a redirection chain","summary":"<p>Response objects have several useful methods:</p>","class_methods":[],"constructors":[{"id":"new(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","html_id":"new(http_client_res:HTTP::Client::Response,request:Crest::Request)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"args_string":"(http_client_res : HTTP::Client::Response, request : Crest::Request)","args_html":"(http_client_res : HTTP::Client::Response, request : <a href=\"../Crest/Request.html\">Crest::Request</a>)","location":{"filename":"src/crest/response.cr","line_number":27,"url":null},"def":{"name":"new","args":[{"name":"http_client_res","doc":null,"default_value":"","external_name":"http_client_res","restriction":"HTTP::Client::Response"},{"name":"request","doc":null,"default_value":"","external_name":"request","restriction":"Crest::Request"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(http_client_res, request)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"body(*args,**options)-instance-method","html_id":"body(*args,**options)-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":20,"url":null},"def":{"name":"body","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.body(*args, **options)"}},{"id":"body(*args,**options,&)-instance-method","html_id":"body(*args,**options,&)-instance-method","name":"body","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":20,"url":null},"def":{"name":"body","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.body(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"body_io(*args,**options)-instance-method","html_id":"body_io(*args,**options)-instance-method","name":"body_io","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":21,"url":null},"def":{"name":"body_io","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.body_io(*args, **options)"}},{"id":"body_io(*args,**options,&)-instance-method","html_id":"body_io(*args,**options,&)-instance-method","name":"body_io","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":21,"url":null},"def":{"name":"body_io","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.body_io(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"client_error?(*args,**options)-instance-method","html_id":"client_error?(*args,**options)-instance-method","name":"client_error?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"client_error?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status.client_error?(*args, **options)"}},{"id":"client_error?(*args,**options,&)-instance-method","html_id":"client_error?(*args,**options,&)-instance-method","name":"client_error?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"client_error?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"status.client_error?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"cookies-instance-method","html_id":"cookies-instance-method","name":"cookies","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/response.cr","line_number":50,"url":null},"def":{"name":"cookies","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request_cookies.merge(response_cookies)"}},{"id":"filename:String?-instance-method","html_id":"filename:String?-instance-method","name":"filename","doc":"Extracts filename from Content-Disposition header","summary":"<p>Extracts filename from Content-Disposition header</p>","abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/crest/response.cr","line_number":59,"url":null},"def":{"name":"filename","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String | ::Nil","visibility":"Public","body":"filename_regex = /filename\\*?=['\"]?(?:UTF-\\d['\"]*)?([^;\\r\\n\"']*)['\"]?;?/ix\nif match_data = ((headers.fetch(\"Content-Disposition\", \"\")).as(String)).match(filename_regex)\n  return match_data[1]\nend\n"}},{"id":"headers-instance-method","html_id":"headers-instance-method","name":"headers","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/response.cr","line_number":44,"url":null},"def":{"name":"headers","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"headers = @request.headers.dup.merge!(http_client_res.headers)\nnormalize_headers(headers)\n"}},{"id":"history:Array-instance-method","html_id":"history:Array-instance-method","name":"history","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array","args_html":" : Array","location":{"filename":"src/crest/response.cr","line_number":54,"url":null},"def":{"name":"history","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array","visibility":"Public","body":"@request.redirection_history"}},{"id":"http_client_res:HTTP::Client::Response-instance-method","html_id":"http_client_res:HTTP::Client::Response-instance-method","name":"http_client_res","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : HTTP::Client::Response","args_html":" : HTTP::Client::Response","location":{"filename":"src/crest/response.cr","line_number":18,"url":null},"def":{"name":"http_client_res","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@http_client_res"}},{"id":"informational?(*args,**options,&)-instance-method","html_id":"informational?(*args,**options,&)-instance-method","name":"informational?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"informational?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"status.informational?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"informational?(*args,**options)-instance-method","html_id":"informational?(*args,**options)-instance-method","name":"informational?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"informational?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status.informational?(*args, **options)"}},{"id":"inspect-instance-method","html_id":"inspect-instance-method","name":"inspect","doc":"Returns a `String` representation of this object suitable\nto be embedded inside other expressions, sometimes providing\nmore information about this object.\n\n`#inspect` (and `#inspect(io)`) are the methods used when\nyou invoke `#to_s` or `#inspect` on an object that holds\nother objects and wants to show them. For example when you\ninvoke `Array#to_s`, `#inspect` will be invoked on each element:\n\n```\nary = [\"one\", \"two\", \"three, etc.\"]\nary.inspect # => [\"one\", \"two\", \"three, etc.\"]\n```\n\nNote that if Array invoked `#to_s` on each of the elements\nabove, the output would have been this:\n\n```\nary = [\"one\", \"two\", \"three, etc.\"]\n# If inspect invoked to_s on each element...\nary.inspect # => [one, two, three, etc.]\n```\n\nNote that it's not clear how many elements the array has,\nor which are they, because `#to_s` doesn't guarantee that\nthe string representation is clearly delimited (in the case\nof `String` the quotes are not shown).\n\nAlso note that sometimes the output of `#inspect` will look\nlike a Crystal expression that will compile, but this isn't\nalways the case, nor is it necessary. Notably, `Reference#inspect`\nand `Struct#inspect` return values that don't compile.\n\nClasses must usually **not** override this method. Instead,\nthey must override `inspect(io)`, which must append to the\ngiven `IO` object.","summary":"<p>Returns a <code>String</code> representation of this object suitable to be embedded inside other expressions, sometimes providing more information about this object.</p>","abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/response.cr","line_number":79,"url":null},"def":{"name":"inspect","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"\"<Crest::Response #{status_code.inspect} #{(body_truncated(10)).inspect}>\""}},{"id":"invalid?-instance-method","html_id":"invalid?-instance-method","name":"invalid?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/response.cr","line_number":67,"url":null},"def":{"name":"invalid?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status_code < 100 || status_code >= 600"}},{"id":"redirect?-instance-method","html_id":"redirect?-instance-method","name":"redirect?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/response.cr","line_number":71,"url":null},"def":{"name":"redirect?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"[301, 302, 303, 307, 308].includes?(status_code)"}},{"id":"redirection?(*args,**options)-instance-method","html_id":"redirection?(*args,**options)-instance-method","name":"redirection?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"redirection?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status.redirection?(*args, **options)"}},{"id":"redirection?(*args,**options,&)-instance-method","html_id":"redirection?(*args,**options,&)-instance-method","name":"redirection?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"redirection?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"status.redirection?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"request:Crest::Request-instance-method","html_id":"request:Crest::Request-instance-method","name":"request","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Request","args_html":" : <a href=\"../Crest/Request.html\">Crest::Request</a>","location":{"filename":"src/crest/response.cr","line_number":18,"url":null},"def":{"name":"request","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@request"}},{"id":"return!(&block:Crest::Response->)-instance-method","html_id":"return!(&block:Crest::Response->)-instance-method","name":"return!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(&block : Crest::Response -> )","args_html":"(&block : <a href=\"../Crest/Response.html\">Crest::Response</a> -> )","location":{"filename":"src/crest/response.cr","line_number":35,"url":null},"def":{"name":"return!","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(Crest::Response -> )"},"return_type":"","visibility":"Public","body":"redirector = Redirector.new(self, request)\nredirector.follow(&block)\n"}},{"id":"return!:Crest::Response-instance-method","html_id":"return!:Crest::Response-instance-method","name":"return!","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Crest::Response","args_html":" : <a href=\"../Crest/Response.html\">Crest::Response</a>","location":{"filename":"src/crest/response.cr","line_number":30,"url":null},"def":{"name":"return!","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Crest::Response","visibility":"Public","body":"redirector = Redirector.new(self, request)\nredirector.follow\n"}},{"id":"server_error?(*args,**options,&)-instance-method","html_id":"server_error?(*args,**options,&)-instance-method","name":"server_error?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"server_error?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"status.server_error?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"server_error?(*args,**options)-instance-method","html_id":"server_error?(*args,**options)-instance-method","name":"server_error?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"server_error?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status.server_error?(*args, **options)"}},{"id":"status(*args,**options,&)-instance-method","html_id":"status(*args,**options,&)-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":22,"url":null},"def":{"name":"status","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.status(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"status(*args,**options)-instance-method","html_id":"status(*args,**options)-instance-method","name":"status","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":22,"url":null},"def":{"name":"status","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.status(*args, **options)"}},{"id":"status_code(*args,**options)-instance-method","html_id":"status_code(*args,**options)-instance-method","name":"status_code","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":23,"url":null},"def":{"name":"status_code","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.status_code(*args, **options)"}},{"id":"status_code(*args,**options,&)-instance-method","html_id":"status_code(*args,**options,&)-instance-method","name":"status_code","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":23,"url":null},"def":{"name":"status_code","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"http_client_res.status_code(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"success?(*args,**options)-instance-method","html_id":"success?(*args,**options)-instance-method","name":"success?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"success?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"status.success?(*args, **options)"}},{"id":"success?(*args,**options,&)-instance-method","html_id":"success?(*args,**options,&)-instance-method","name":"success?","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":24,"url":null},"def":{"name":"success?","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"status.success?(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_curl(*args,**options)-instance-method","html_id":"to_curl(*args,**options)-instance-method","name":"to_curl","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/crest/response.cr","line_number":25,"url":null},"def":{"name":"to_curl","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"request.to_curl(*args, **options)"}},{"id":"to_curl(*args,**options,&)-instance-method","html_id":"to_curl(*args,**options,&)-instance-method","name":"to_curl","doc":null,"summary":null,"abstract":false,"args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/crest/response.cr","line_number":25,"url":null},"def":{"name":"to_curl","args":[{"name":"args","doc":null,"default_value":"","external_name":"args","restriction":""}],"double_splat":{"name":"options","doc":null,"default_value":"","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arg":null,"return_type":"","visibility":"Public","body":"request.to_curl(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/crest/response.cr","line_number":75,"url":null},"def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io.write_utf8(body.to_slice)"}},{"id":"url:String-instance-method","html_id":"url:String-instance-method","name":"url","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/crest/response.cr","line_number":40,"url":null},"def":{"name":"url","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@request.url"}}],"macros":[],"types":[]},{"html_id":"crest/Crest/TextValue","path":"Crest/TextValue.html","kind":"alias","full_name":"Crest::TextValue","name":"TextValue","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/crest.cr","line_number":37,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":true,"aliased":"(Bool | Int32 | String | Symbol | Nil)","aliased_html":"Bool | Int32 | String | Symbol | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"crest/Crest/UrlencodedForm","path":"Crest/UrlencodedForm.html","kind":"class","full_name":"Crest::UrlencodedForm(T)","name":"UrlencodedForm","abstract":false,"superclass":{"html_id":"crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},"ancestors":[{"html_id":"crest/Crest/Form","kind":"class","full_name":"Crest::Form","name":"Form"},{"html_id":"crest/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"crest/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/crest/forms/urlencoded_form.cr","line_number":8,"url":null}],"repository_name":"crest","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"crest/Crest","kind":"module","full_name":"Crest","name":"Crest"},"doc":"This class lets `crest` emulate a filled-in form\nin which a user has pressed the submit button.\nThis causes `crest` to POST data using the\n\"Content-Type\" `application/x-www-form-urlencoded`.","summary":"<p>This class lets <code>crest</code> emulate a filled-in form in which a user has pressed the submit button.</p>","class_methods":[],"constructors":[{"id":"new(params:T)-class-method","html_id":"new(params:T)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"args_string":"(params : T)","args_html":"(params : T)","location":{"filename":"src/crest/form.cr","line_number":12,"url":null},"def":{"name":"new","args":[{"name":"params","doc":null,"default_value":"","external_name":"params","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = UrlencodedForm(T).allocate\n_.initialize(params)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"generate-instance-method","html_id":"generate-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/forms/urlencoded_form.cr","line_number":11,"url":null},"def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@form_data = parsed_params\nself\n"}},{"id":"parsed_params-instance-method","html_id":"parsed_params-instance-method","name":"parsed_params","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/crest/forms/urlencoded_form.cr","line_number":17,"url":null},"def":{"name":"parsed_params","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Crest::ParamsEncoder.encode(@params)"}}],"macros":[],"types":[]}]}]}}